# Задание №6
# Таблица умножения от 1 до 9
# Первый способ
print("Выводим таблицу умножения от 1 до 9")
count = 0
for i in range(1, 10):  # используем цикл for в диапазон от 1 до 9
    for a in range(1, 10):  # в цикле for вводим вложенный цикл в диапазоне от 1 до 9
        count = i * a  # при каждой итерации вложенного цикла for перемножаем переменные внешнего и вложенного цикла
        print(f"{i} * {a} = {count}", end='\t')
    print()

# Второй способ
print("Выводим таблицу умножения от 1 до 9")
for i in range(1, 10):  # используем цикл for в диапазон от 1 до 9
    for a in range(1, 10):  # в цикле for вводим вложенный цикл в диапазоне от 1 до 9
        print(i * a, end="\t")
    print()

# Домашнее задание
# 1 Перемножить все нечетные значения в диапазоне от 1 до 100
count = 1  # объявляем переменную count и передаем ей значение 1
for i in range(1, 101):  # используем цикл for в диапазон от 1 до 100 включительно
    if i % 2 != 0:
        count *= i  # если остаток от деления на 2 (проверка на четность) = 0, то count перемножаем переменную цикла
print(f'Произведение все нечетных значения в диапазоне от 1 до 100: {count}')

# 2 Записать в массив все числа в диапазоне от 1 до 500 кратные 5
a_list = []  # создаем пустой массив
for i in range(1, 501):  # используем цикл for в диапазон от 1 до 500 включительно
    if i % 5 == 0:
        # если остаток от деления на 5 (проверка на кратность 5) = 0, то переменную цикла добавляем в массив a_list
        a_list.append(i)
print(a_list)

# 3 Вывести на экран все чётные значения в диапазоне от 1 до 497
for i in range(1, 498):  # используем цикл for в диапазон от 1 до 497 включительно
    if i % 2 == 0:
        # если остаток от деления на 2 (проверка на четность) = 0, то выводим переменную цикла на экран
        print(i, end=", ")
print()

# 4 Дан массив чисел. Если число встречается более двух раз, то добавить его в новый массив
a_list = [11, 57, 63, 85, 56, 98, 11, 63, 11, 98]  # создан массив с элементами
a_list_new = []  # создан пустой массив
for i in a_list:  # используем цикл for для массива a_list
    if a_list.count(i) > 1:  # используем метод count (считает сколько раз переменная цикла появляется в массиве
        # Если переменная встречается более 1 раза, то проверяется, добавлена ли она в массив. Если нет, то добавляется
        if a_list_new.count(i) != 1:
            a_list_new.append(i)
print(a_list_new)

# Дополнительное задание

# 1. Найдите длину всех слов в массиве
arr = ["один", "два", "три", "четыре", "пять"]
str_ = "".join(arr)  # преобразуем в строку
print(len(str_))  # используем функцию len для подсчета всех символов

# 2. Найти номер и значение первого найденного отрицательного элемента массива
arr_1 = [19, 36, -51, 74, -93, 25]
for i in arr_1:  # используем цикл for для нахождения первого отрицательного элемента
    if i < 1:
        print(f"Первый отрицательный элемент:\nЗначение: {i}\nНомер: {arr_1.index(i)}")
        break  # при последовательных итерациях при нахождении отрицательного элемента цикл прерывается

# 3. Найти максимальный и минимальный элемент массива. Выведите эти элементы и их сумму.
# ПЕРВЫЙ СПОСОБ
arr_1 = [19, 36, 51, 74, 93, 25, 74, 123, 11]
print(f"Наш массив:\n{arr_1}")
print(f"Наименьшее число в массиве: {min(arr_1)}")
print(f"Наибольшее число в массиве: {max(arr_1)}")
# ВТОРОЙ СПОСОБ
arr_1 = [19, 36, 51, 74, 93, 25, 74, 123, 11]
arr_double = arr_1[:]
print(f"Наш массив:\n{arr_1}")
arr_double.sort(reverse=True)  # используем метод sort для сортировки от большего к меньшему
print(f"Максимальный элемент: {arr_double[0]}")  # по индексу выводим первый элемент (наш набольший элемент)
arr_double.sort()  # используем метод sort для сортировки от меньшего к большему
print(f"Минимальный элемент: {arr_double[0]}")  # по индексу выводим первый элемент (наш наименьший элемент)
# ТРЕТИЙ СПОСОБ
arr_1 = [19, 36, 51, 74, 93, 25, 74, 123, 11]
arr_1.sort()
print(f"Min: {arr_1[0]}, Max: {arr_1[-1]}")

# 4. Создайте произвольный массив и выведите его перевернутую версию (создав новый массив)
arr_2 = [19, "one", 51, 74, 93, "hello", 74, 123, 11]
arr_new = []
arr_2.reverse()  # используем метод reverse для расположения элементов в обратной последовательности
for i in arr_2:  # цикл for для переборки элементов уже в обратной последовательности и добавление их в массив arr_new
    arr_new.append(i)
print(arr_2)

arr_1 = [19, 36, 51, 74, 93, 25, 74, [123, 125], 11]
# создание нового списка с переносом элементов из списка arr_1 метод copy и модуль copy импорт
arr_new2 = arr_1.copy()
arr_new = arr_1[:]  # альтернативный метод создания нового списка с переносом элементов из списка arr_1
arr_new.remove([123, 125])
print(arr_1)
print(arr_new)
print(arr_new2)
